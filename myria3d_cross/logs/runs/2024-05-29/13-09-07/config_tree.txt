CONFIG
├── task
│   └── task_name: fit                                                          
│       auto_lr_find: false                                                     
│                                                                               
├── seed
│   └── 12345                                                                   
├── logger
│   └── comet:                                                                  
│         _target_: pytorch_lightning.loggers.comet.CometLogger                 
│         api_key: ${oc.env:COMET_API_TOKEN}                                    
│         workspace: ${oc.env:COMET_WORKSPACE}                                  
│         project_name: crossvalidation                                         
│         experiment_name: run_62                                               
│         auto_log_co2: false                                                   
│         disabled: false                                                       
│                                                                               
├── trainer
│   └── _target_: pytorch_lightning.Trainer                                     
│       min_epochs: 150                                                         
│       max_epochs: 400                                                         
│       log_every_n_steps: 1                                                    
│       accelerator: gpu                                                        
│       devices: 1                                                              
│       num_nodes: 1                                                            
│       num_sanity_val_steps: 0                                                 
│                                                                               
├── model
│   └── optimizer:                                                              
│         _target_: functools.partial                                           
│         _args_:                                                               
│         - ${get_method:torch.optim.Adam}                                      
│         lr: ${model.lr}                                                       
│       lr_scheduler:                                                           
│         _target_: functools.partial                                           
│         _args_:                                                               
│         - ${get_method:torch.optim.lr_scheduler.ReduceLROnPlateau}            
│         mode: min                                                             
│         factor: 0.5                                                           
│         patience: 20                                                          
│         cooldown: 5                                                           
│         verbose: true                                                         
│       criterion:                                                              
│         _target_: torch.nn.CrossEntropyLoss                                   
│         label_smoothing: 0.0                                                  
│         ignore_index: 65                                                      
│       _target_: myria3d.models.model.Model                                    
│       d_in: ${dataset_description.d_in}                                       
│       num_classes: ${dataset_description.num_classes}                         
│       classification_dict: ${dataset_description.classification_dict}         
│       ckpt_path: null                                                         
│       neural_net_class_name: PyGRandLANet                                     
│       neural_net_hparams:                                                     
│         num_features: ${model.d_in}                                           
│         num_classes: ${model.num_classes}                                     
│         num_neighbors: 16                                                     
│         decimation: 4                                                         
│         return_logits: true                                                   
│         global_feat_train: true                                               
│       interpolation_k: ${predict.interpolator.interpolation_k}                
│       num_workers: 4                                                          
│       momentum: 0.9                                                           
│       monitor: val/loss_epoch                                                 
│       lr: 0.003933709606504788                                                
│                                                                               
├── datamodule
│   └── transforms:                                                             
│         preparations:                                                         
│           train:                                                              
│             TargetTransform:                                                  
│               _target_: myria3d.pctl.transforms.transforms.TargetTransform    
│               _args_:                                                         
│               - ${dataset_description.classification_preprocessing_dict}      
│               - ${dataset_description.classification_dict}                    
│             DropPointsByClass:                                                
│               _target_: myria3d.pctl.transforms.transforms.DropPointsByClass  
│             MinimumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MinimumNumNodes    
│               _args_:                                                         
│               - 300                                                           
│             MaximumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MaximumNumNodes    
│               _args_:                                                         
│               - 40000                                                         
│             Center:                                                           
│               _target_: torch_geometric.transforms.Center                     
│           eval:                                                               
│             TargetTransform:                                                  
│               _target_: myria3d.pctl.transforms.transforms.TargetTransform    
│               _args_:                                                         
│               - ${dataset_description.classification_preprocessing_dict}      
│               - ${dataset_description.classification_dict}                    
│             DropPointsByClass:                                                
│               _target_: myria3d.pctl.transforms.transforms.DropPointsByClass  
│             CopyFullPos:                                                      
│               _target_: myria3d.pctl.transforms.transforms.CopyFullPos        
│             CopyFullPreparedTargets:                                          
│               _target_: myria3d.pctl.transforms.transforms.CopyFullPreparedTar
│             MinimumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MinimumNumNodes    
│               _args_:                                                         
│               - 300                                                           
│             MaximumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MaximumNumNodes    
│               _args_:                                                         
│               - 40000                                                         
│             CopySampledPos:                                                   
│               _target_: myria3d.pctl.transforms.transforms.CopySampledPos     
│             Center:                                                           
│               _target_: torch_geometric.transforms.Center                     
│           predict:                                                            
│             DropPointsByClass:                                                
│               _target_: myria3d.pctl.transforms.transforms.DropPointsByClass  
│             CopyFullPos:                                                      
│               _target_: myria3d.pctl.transforms.transforms.CopyFullPos        
│             MinimumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MinimumNumNodes    
│               _args_:                                                         
│               - 300                                                           
│             MaximumNumNodes:                                                  
│               _target_: myria3d.pctl.transforms.transforms.MaximumNumNodes    
│               _args_:                                                         
│               - 40000                                                         
│             CopySampledPos:                                                   
│               _target_: myria3d.pctl.transforms.transforms.CopySampledPos     
│             Center:                                                           
│               _target_: torch_geometric.transforms.Center                     
│         augmentations:                                                        
│           random_jitter:                                                      
│             _target_: torch_geometric.transforms.RandomJitter                 
│             _args_:                                                           
│             - 0.1                                                             
│         normalizations: {}                                                    
│         augmentations_list: '${oc.dict.values: datamodule.transforms.augmentat
│         preparations_train_list: '${oc.dict.values: datamodule.transforms.prep
│         preparations_eval_list: '${oc.dict.values: datamodule.transforms.prepa
│         preparations_predict_list: '${oc.dict.values: datamodule.transforms.pr
│         normalizations_list: '${oc.dict.values: datamodule.transforms.normaliz
│       _target_: myria3d.pctl.datamodule.hdf5.HDF5LidarDataModule              
│       data_dir: ${hydra:runtime.cwd}/tests/data/train/                        
│       epsg: 2154                                                              
│       split_csv_path: ${hydra:runtime.cwd}/tests/data/crossvalidation.csv     
│       hdf5_file_path: ${hydra:runtime.cwd}/tests/data/crossvalidation.hdf5    
│       file_format: las                                                        
│       points_pre_transform:                                                   
│         _target_: functools.partial                                           
│         _args_:                                                               
│         - ${get_method:myria3d.pctl.points_pre_transform.lidar_hd.lidar_hd_pre
│       pre_filter:                                                             
│         _target_: functools.partial                                           
│         _args_:                                                               
│         - ${get_method:myria3d.pctl.dataset.utils.pre_filter_below_n_points}  
│         min_num_nodes: 1                                                      
│       sampling_method: tiling                                                 
│       tile_width: 1000                                                        
│       subtile_width: 60                                                       
│       subtile_overlap_train: 0                                                
│       subtile_overlap_predict: ${predict.subtile_overlap}                     
│       batch_size: 6                                                           
│       num_workers: 3                                                          
│       prefetch_factor: 3                                                      
│                                                                               
├── dataset_description
│   └── _convert_: all                                                          
│       classification_preprocessing_dict:                                      
│         0: 0                                                                  
│         1: 1                                                                  
│       classification_dict:                                                    
│         0: textured                                                           
│         1: untextured                                                         
│       class_weights:                                                          
│       - 0.86889409                                                            
│       - 1.17770128                                                            
│       d_in: 2                                                                 
│       num_classes: 2                                                          
│                                                                               
├── callbacks
│   └── log_code:                                                               
│         _target_: myria3d.callbacks.comet_callbacks.LogCode                   
│         code_dir: ${work_dir}/myria3d                                         
│       log_logs_dir:                                                           
│         _target_: myria3d.callbacks.comet_callbacks.LogLogsPath               
│       lr_monitor:                                                             
│         _target_: pytorch_lightning.callbacks.LearningRateMonitor             
│         logging_interval: step                                                
│         log_momentum: true                                                    
│       model_checkpoint:                                                       
│         _target_: pytorch_lightning.callbacks.ModelCheckpoint                 
│         monitor: val/loss_epoch                                               
│         mode: min                                                             
│         save_top_k: 4                                                         
│         save_last: true                                                       
│         verbose: true                                                         
│         dirpath: checkpoints/                                                 
│         filename: epoch_{epoch:03d}                                           
│         auto_insert_metric_name: false                                        
│       early_stopping:                                                         
│         _target_: pytorch_lightning.callbacks.EarlyStopping                   
│         monitor: val/loss_epoch                                               
│         mode: min                                                             
│         patience: 10                                                          
│         min_delta: 0                                                          
│                                                                               
└── predict
    └── src_data: ???                                                           
        output_dir: ${hydra:runtime.cwd}/outputs/                               
        ckpt_path: ${hydra:runtime.cwd}logs/runs/2024-05-17/12-03-09/checkpoints
        gpus: 0                                                                 
        subtile_overlap: 25                                                     
        interpolator:                                                           
          _target_: myria3d.models.interpolation.Interpolator                   
          interpolation_k: 100                                                  
          classification_dict: ${dataset_description.classification_dict}       
          probas_to_save: all                                                   
          predicted_classification_channel: PredictedClassification             
          entropy_channel: entropy                                              
                                                                                
